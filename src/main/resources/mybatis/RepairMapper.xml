<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.RepairMapper">
    <resultMap id="RepairMap" type="com.model.Repair">
        <result property="id" column="order_id"/>
        <result property="studentId" column="sid"/>
        <result property="studentName" column="sname"/>
        <result property="studentPhone" column="sphone"/>
        <result property="dormBuildId" column="dormbuild_id"/>
        <result property="dormRoomId" column="dormroom_id"/>
        <result property="workerId" column="rid"/>
        <result property="workerName" column="rname"/>
        <result property="workerPhone" column="rphone"/>
        <result property="type" column="type"/>
        <result property="content" column="content"/>
        <result property="state" column="state"/>
        <result property="orderBuildTime" column="order_buildtime"/>
        <result property="orderFinishTime" column="order_finishtime"/>
    </resultMap>

    <insert id="addNewOrder" parameterType="com.model.Repair">
        insert into repair(sid, sname, sphone, dormbuild_id, dormroom_id, wid, wname, wphone, type, content, state)
            value (#{studentId}, #{studentName}, #{studentPhone}, #{dormBuildId}, #{dormRoomId}, #{workerId},
                   #{workerName},
                   #{workerPhone},
                   #{type}, #{content}, #{state})
    </insert>
    <update id="updateNewOrder" parameterType="com.model.Repair">
        update repair
        set sid              = #{studentId},
            sname            =#{studentName},
            sphone           = #{studentPhone},
            dormbuild_id     = #{dormBuildId},
            dormroom_id      = #{dormRoomId},
            wid              = #{repairer},
            wname            = #{rName},
            wphone           = #{rPhone},
            type             = #{type},
            content          = #{content},
            state            = #{state},
            order_finishtime = #{orderFinishTime},
            finish           = #{finish},
            evaluate         = #{evaluate}
        where order_id = #{id}
    </update>
    <delete id="deleteOrder" parameterType="java.lang.Integer">
        delete
        from repair
        where order_id = #{id}
    </delete>
    <select id="showOrderNum" resultType="java.lang.Integer">
        select count(order_id)
        from repair
        where finish = 0
    </select>
    <select id="find" resultMap="RepairMap" parameterType="java.lang.String">
        select *
        from repair
        where sname like concat('%', #{search}, '%')
    </select>
    <select id="individualFind" resultMap="RepairMap">
        select *
        from repair
        where sid = #{sId}
          and type like concat('%', #{search}, '%')
    </select>
    <select id="selectRepairerById" resultMap="RepairMap" parameterType="int">
        select *
        from repair
        where order_id = #{id}
    </select>
</mapper>
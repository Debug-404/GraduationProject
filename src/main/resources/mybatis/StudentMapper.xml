<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.StudentMapper">

    <resultMap id="StudentMap" type="com.model.Student">
        <result property="roomNo" column="room_no"/>
    </resultMap>

    <select id="findAll" resultMap="StudentMap">
        select id, password, name, age, sex, phone, room_no
        from student
        where flag != 0
    </select>

    <select id="findByLimit" resultMap="StudentMap" resultType="map">
        select id, password, name, age, sex, phone, room_no
        from student
        limit #{startIndex},#{pageSize}
    </select>

    <select id="selectStudentById" resultMap="StudentMap">
        select id, password, name, age, sex, phone, room_no
        from student
        where id = #{id}
          and flag != 0
    </select>

    <insert id="addStudent" parameterType="com.model.Student">
        insert into student(id, password, name, age, sex, phone, room_no)
            value (#{id}, #{password}, #{name}, #{age}, #{sex}, #{phone}, #{roomNo})
    </insert>
    <insert id="repair" parameterType="map">
        insert into order(sid, room_no, sphone, rid, rphone, type)
            value (#{sid}, #{roomNo}, #{sphone}, #{rid}, #{rphone}, #{type})
    </insert>

    <delete id="deleteStudent" parameterType="String">
        delete
        from student
        where id = #{id}
          and flag != 0
    </delete>

    <update id="updateStudent" parameterType="com.model.Student">
        update student
        SET name    = #{name},
            age     = #{age},
            sex     =#{sex},
            phone   = #{phone},
            room_no = #{roomNo}
        where id = #{id}
          and flag != 0
    </update>
    <update id="updatePassword" parameterType="map">
        update student
        set password = #{password}
        where id = #{id}
          and flag != 0
    </update>
</mapper>